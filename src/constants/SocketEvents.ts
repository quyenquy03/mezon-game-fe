export const SocketEvents = {
  EMIT: {
    USER_CONNECTION: "userConnection",
    USER_DISCONNECT: "disconnect",
    USER_VISIT_GAME: "userVisitGame",
    GET_LIST_USERS: "getListUsers",

    CREATE_ROOM: "createRoom",
    GET_LIST_ROOMS: "getListRooms",
    JOIN_ROOM: "joinRoom",
    LEFT_ROOM: "leftRoom",
    CHECK_ROOM_BEFORE_JOIN: "checkRoomBeforeJoin",
    GET_MEMBER_OF_ROOM: "getMemberOfRoom",
    CHECK_BEFORE_START_GAME: "checkBeforeStartGame",
    START_NEW_GAME: "startNewGame",
    START_ROUND: "startRound",
    START_TURN: "startTurn",
    SUBMIT_TURN: "submitTurn",
    GET_TURN_RESULT: "getTurnResult",
    CONTINUE_JOIN_GAME: "continueJoinGame",
    COMBINE_NEXT_ROUND: "combineNextRound",
  },
  ON: {
    USER_CONNECTED: "userConnected",
    USER_DISCONNECTED: "userDisconnected",
    USER_VISIT_GAME_SUCCESS: "userVisitGameSuccess",
    USER_VISIT_GAME_FAILED: "userVisitGameFailed",
    GET_LIST_USERS_SUCCESS: "getListUsersSuccess",
    GET_LIST_USERS_FAILED: "getListUsersFailed",

    CREATE_ROOM_SUCCESS: "createRoomSuccess",
    CREATE_ROOM_FAILED: "createRoomFailed",
    GET_LIST_ROOMS_SUCCESS: "getListRoomsSuccess",
    GET_LIST_ROOMS_FAILED: "getListRoomsFailed",
    JOIN_ROOM_SUCCESS: "joinRoomSuccess",
    JOIN_ROOM_FAILED: "joinRoomFailed",
    LEFT_ROOM_SUCCESS: "leftRoomSuccess",
    LEFT_ROOM_FAILED: "leftRoomFailed",
    CHECK_ROOM_BEFORE_JOIN_SUCCESS: "checkRoomBeforeJoinSuccess",
    CHECK_ROOM_BEFORE_JOIN_FAILED: "checkRoomBeforeJoinFailed",
    GET_MEMBER_OF_ROOM_SUCCESS: "getMemberOfRoomSuccess",
    GET_MEMBER_OF_ROOM_FAILED: "getMemberOfRoomFailed",
    CHECK_BEFORE_START_GAME_SUCCESS: "checkBeforeStartGameSuccess",
    CHECK_BEFORE_START_GAME_FAILED: "checkBeforeStartGameFailed",
    START_NEW_GAME_SUCCESS: "startNewGameSuccess",
    START_NEW_GAME_FAILED: "startNewGameFailed",
    START_ROUND_SUCCESS: "startRoundSuccess",
    START_ROUND_FAILED: "startRoundFailed",
    START_TURN_SUCCESS: "startTurnSuccess",
    START_TURN_FAILED: "startTurnFailed",

    SUBMIT_TURN_NOW: "submitTurnNow",
    SUBMIT_TURN_SUCCESS: "submitTurnSuccess",
    SUBMIT_TURN_FAILED: "submitTurnFailed",
    GET_TURN_RESULT_SUCCESS: "getTurnResultSuccess",
    GET_TURN_RESULT_FAILED: "getTurnResultFailed",
    CONTINUE_TURN: "continueTurn",
    END_OF_ROUND: "endOfRound",
    END_OF_GAME: "endOfGame",
    COMBINE_NEXT_ROUND_SUCCESS: "combineNextRoundSuccess",
    COMBINE_NEXT_ROUND_FAILED: "combineNextRoundFailed",
    CONTINUE_JOIN_GAME_SUCCESS: "continueJoinGameSuccess",
    CONTINUE_JOIN_GAME_FAILED: "continueJoinGameFailed",
  },
};
